module Parser
// Implementation file for parser generated by fsyacc
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"

open CheckComputation
open Ast

# 10 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HOLE
  | LSQUAREBRACKET
  | RSQUAREBRACKET
  | LARROW
  | AND
  | TYPEFUN
  | COLONS
  | WITH
  | LESSTHAN
  | HOM
  | HASH
  | DICT
  | TOSET
  | POSET
  | SEMILATTICE
  | FORALL
  | BIGFORALL
  | IMPLIES
  | ARROW
  | INL
  | INR
  | TO
  | CAP
  | UNCAP
  | PIPE
  | TYPES
  | SEMICOLON
  | LBRACK
  | RBRACK
  | BANG
  | AT
  | DOT
  | PLUS
  | MINUS
  | QUESTION
  | ASTERISK
  | LPAREN
  | RPAREN
  | IN
  | LET
  | END
  | EOF
  | FST
  | SND
  | COMMA
  | OF
  | CASE
  | BOT
  | JOIN
  | EXTRACT
  | CONS
  | IGET
  | ISET
  | TRUE
  | FALSE
  | FUN
  | COLON
  | EQUAL
  | FLOAT of (System.Double)
  | INT of (System.Int32)
  | ID of (string)
  | CONST of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HOLE
    | TOKEN_LSQUAREBRACKET
    | TOKEN_RSQUAREBRACKET
    | TOKEN_LARROW
    | TOKEN_AND
    | TOKEN_TYPEFUN
    | TOKEN_COLONS
    | TOKEN_WITH
    | TOKEN_LESSTHAN
    | TOKEN_HOM
    | TOKEN_HASH
    | TOKEN_DICT
    | TOKEN_TOSET
    | TOKEN_POSET
    | TOKEN_SEMILATTICE
    | TOKEN_FORALL
    | TOKEN_BIGFORALL
    | TOKEN_IMPLIES
    | TOKEN_ARROW
    | TOKEN_INL
    | TOKEN_INR
    | TOKEN_TO
    | TOKEN_CAP
    | TOKEN_UNCAP
    | TOKEN_PIPE
    | TOKEN_TYPES
    | TOKEN_SEMICOLON
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_BANG
    | TOKEN_AT
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_QUESTION
    | TOKEN_ASTERISK
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_IN
    | TOKEN_LET
    | TOKEN_END
    | TOKEN_EOF
    | TOKEN_FST
    | TOKEN_SND
    | TOKEN_COMMA
    | TOKEN_OF
    | TOKEN_CASE
    | TOKEN_BOT
    | TOKEN_JOIN
    | TOKEN_EXTRACT
    | TOKEN_CONS
    | TOKEN_IGET
    | TOKEN_ISET
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_FUN
    | TOKEN_COLON
    | TOKEN_EQUAL
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_ID
    | TOKEN_CONST
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startExprList
    | NONTERM__startTy
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_TypeAlias
    | NONTERM_TypeAliasList
    | NONTERM_ProperKindPrime
    | NONTERM_ExprList
    | NONTERM_LetList
    | NONTERM_ForallParList
    | NONTERM_TypeParList
    | NONTERM_ParList
    | NONTERM_EntryList
    | NONTERM_CoeffectAscriptionList
    | NONTERM_Expr
    | NONTERM_Scalar
    | NONTERM_TyList
    | NONTERM_Ty

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HOLE  -> 0 
  | LSQUAREBRACKET  -> 1 
  | RSQUAREBRACKET  -> 2 
  | LARROW  -> 3 
  | AND  -> 4 
  | TYPEFUN  -> 5 
  | COLONS  -> 6 
  | WITH  -> 7 
  | LESSTHAN  -> 8 
  | HOM  -> 9 
  | HASH  -> 10 
  | DICT  -> 11 
  | TOSET  -> 12 
  | POSET  -> 13 
  | SEMILATTICE  -> 14 
  | FORALL  -> 15 
  | BIGFORALL  -> 16 
  | IMPLIES  -> 17 
  | ARROW  -> 18 
  | INL  -> 19 
  | INR  -> 20 
  | TO  -> 21 
  | CAP  -> 22 
  | UNCAP  -> 23 
  | PIPE  -> 24 
  | TYPES  -> 25 
  | SEMICOLON  -> 26 
  | LBRACK  -> 27 
  | RBRACK  -> 28 
  | BANG  -> 29 
  | AT  -> 30 
  | DOT  -> 31 
  | PLUS  -> 32 
  | MINUS  -> 33 
  | QUESTION  -> 34 
  | ASTERISK  -> 35 
  | LPAREN  -> 36 
  | RPAREN  -> 37 
  | IN  -> 38 
  | LET  -> 39 
  | END  -> 40 
  | EOF  -> 41 
  | FST  -> 42 
  | SND  -> 43 
  | COMMA  -> 44 
  | OF  -> 45 
  | CASE  -> 46 
  | BOT  -> 47 
  | JOIN  -> 48 
  | EXTRACT  -> 49 
  | CONS  -> 50 
  | IGET  -> 51 
  | ISET  -> 52 
  | TRUE  -> 53 
  | FALSE  -> 54 
  | FUN  -> 55 
  | COLON  -> 56 
  | EQUAL  -> 57 
  | FLOAT _ -> 58 
  | INT _ -> 59 
  | ID _ -> 60 
  | CONST _ -> 61 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HOLE 
  | 1 -> TOKEN_LSQUAREBRACKET 
  | 2 -> TOKEN_RSQUAREBRACKET 
  | 3 -> TOKEN_LARROW 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_TYPEFUN 
  | 6 -> TOKEN_COLONS 
  | 7 -> TOKEN_WITH 
  | 8 -> TOKEN_LESSTHAN 
  | 9 -> TOKEN_HOM 
  | 10 -> TOKEN_HASH 
  | 11 -> TOKEN_DICT 
  | 12 -> TOKEN_TOSET 
  | 13 -> TOKEN_POSET 
  | 14 -> TOKEN_SEMILATTICE 
  | 15 -> TOKEN_FORALL 
  | 16 -> TOKEN_BIGFORALL 
  | 17 -> TOKEN_IMPLIES 
  | 18 -> TOKEN_ARROW 
  | 19 -> TOKEN_INL 
  | 20 -> TOKEN_INR 
  | 21 -> TOKEN_TO 
  | 22 -> TOKEN_CAP 
  | 23 -> TOKEN_UNCAP 
  | 24 -> TOKEN_PIPE 
  | 25 -> TOKEN_TYPES 
  | 26 -> TOKEN_SEMICOLON 
  | 27 -> TOKEN_LBRACK 
  | 28 -> TOKEN_RBRACK 
  | 29 -> TOKEN_BANG 
  | 30 -> TOKEN_AT 
  | 31 -> TOKEN_DOT 
  | 32 -> TOKEN_PLUS 
  | 33 -> TOKEN_MINUS 
  | 34 -> TOKEN_QUESTION 
  | 35 -> TOKEN_ASTERISK 
  | 36 -> TOKEN_LPAREN 
  | 37 -> TOKEN_RPAREN 
  | 38 -> TOKEN_IN 
  | 39 -> TOKEN_LET 
  | 40 -> TOKEN_END 
  | 41 -> TOKEN_EOF 
  | 42 -> TOKEN_FST 
  | 43 -> TOKEN_SND 
  | 44 -> TOKEN_COMMA 
  | 45 -> TOKEN_OF 
  | 46 -> TOKEN_CASE 
  | 47 -> TOKEN_BOT 
  | 48 -> TOKEN_JOIN 
  | 49 -> TOKEN_EXTRACT 
  | 50 -> TOKEN_CONS 
  | 51 -> TOKEN_IGET 
  | 52 -> TOKEN_ISET 
  | 53 -> TOKEN_TRUE 
  | 54 -> TOKEN_FALSE 
  | 55 -> TOKEN_FUN 
  | 56 -> TOKEN_COLON 
  | 57 -> TOKEN_EQUAL 
  | 58 -> TOKEN_FLOAT 
  | 59 -> TOKEN_INT 
  | 60 -> TOKEN_ID 
  | 61 -> TOKEN_CONST 
  | 64 -> TOKEN_end_of_input
  | 62 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startExprList 
    | 1 -> NONTERM__startTy 
    | 2 -> NONTERM__startstart 
    | 3 -> NONTERM_start 
    | 4 -> NONTERM_start 
    | 5 -> NONTERM_TypeAlias 
    | 6 -> NONTERM_TypeAliasList 
    | 7 -> NONTERM_TypeAliasList 
    | 8 -> NONTERM_ProperKindPrime 
    | 9 -> NONTERM_ProperKindPrime 
    | 10 -> NONTERM_ProperKindPrime 
    | 11 -> NONTERM_ExprList 
    | 12 -> NONTERM_ExprList 
    | 13 -> NONTERM_ExprList 
    | 14 -> NONTERM_LetList 
    | 15 -> NONTERM_LetList 
    | 16 -> NONTERM_LetList 
    | 17 -> NONTERM_LetList 
    | 18 -> NONTERM_LetList 
    | 19 -> NONTERM_LetList 
    | 20 -> NONTERM_LetList 
    | 21 -> NONTERM_LetList 
    | 22 -> NONTERM_ForallParList 
    | 23 -> NONTERM_ForallParList 
    | 24 -> NONTERM_TypeParList 
    | 25 -> NONTERM_TypeParList 
    | 26 -> NONTERM_ParList 
    | 27 -> NONTERM_ParList 
    | 28 -> NONTERM_ParList 
    | 29 -> NONTERM_EntryList 
    | 30 -> NONTERM_EntryList 
    | 31 -> NONTERM_CoeffectAscriptionList 
    | 32 -> NONTERM_CoeffectAscriptionList 
    | 33 -> NONTERM_Expr 
    | 34 -> NONTERM_Expr 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_Expr 
    | 47 -> NONTERM_Expr 
    | 48 -> NONTERM_Expr 
    | 49 -> NONTERM_Expr 
    | 50 -> NONTERM_Expr 
    | 51 -> NONTERM_Expr 
    | 52 -> NONTERM_Expr 
    | 53 -> NONTERM_Expr 
    | 54 -> NONTERM_Expr 
    | 55 -> NONTERM_Expr 
    | 56 -> NONTERM_Expr 
    | 57 -> NONTERM_Expr 
    | 58 -> NONTERM_Expr 
    | 59 -> NONTERM_Expr 
    | 60 -> NONTERM_Scalar 
    | 61 -> NONTERM_Scalar 
    | 62 -> NONTERM_Scalar 
    | 63 -> NONTERM_Scalar 
    | 64 -> NONTERM_TyList 
    | 65 -> NONTERM_TyList 
    | 66 -> NONTERM_Ty 
    | 67 -> NONTERM_Ty 
    | 68 -> NONTERM_Ty 
    | 69 -> NONTERM_Ty 
    | 70 -> NONTERM_Ty 
    | 71 -> NONTERM_Ty 
    | 72 -> NONTERM_Ty 
    | 73 -> NONTERM_Ty 
    | 74 -> NONTERM_Ty 
    | 75 -> NONTERM_Ty 
    | 76 -> NONTERM_Ty 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 64 
let _fsyacc_tagOfErrorTerminal = 62

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HOLE  -> "HOLE" 
  | LSQUAREBRACKET  -> "LSQUAREBRACKET" 
  | RSQUAREBRACKET  -> "RSQUAREBRACKET" 
  | LARROW  -> "LARROW" 
  | AND  -> "AND" 
  | TYPEFUN  -> "TYPEFUN" 
  | COLONS  -> "COLONS" 
  | WITH  -> "WITH" 
  | LESSTHAN  -> "LESSTHAN" 
  | HOM  -> "HOM" 
  | HASH  -> "HASH" 
  | DICT  -> "DICT" 
  | TOSET  -> "TOSET" 
  | POSET  -> "POSET" 
  | SEMILATTICE  -> "SEMILATTICE" 
  | FORALL  -> "FORALL" 
  | BIGFORALL  -> "BIGFORALL" 
  | IMPLIES  -> "IMPLIES" 
  | ARROW  -> "ARROW" 
  | INL  -> "INL" 
  | INR  -> "INR" 
  | TO  -> "TO" 
  | CAP  -> "CAP" 
  | UNCAP  -> "UNCAP" 
  | PIPE  -> "PIPE" 
  | TYPES  -> "TYPES" 
  | SEMICOLON  -> "SEMICOLON" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | BANG  -> "BANG" 
  | AT  -> "AT" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | QUESTION  -> "QUESTION" 
  | ASTERISK  -> "ASTERISK" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | IN  -> "IN" 
  | LET  -> "LET" 
  | END  -> "END" 
  | EOF  -> "EOF" 
  | FST  -> "FST" 
  | SND  -> "SND" 
  | COMMA  -> "COMMA" 
  | OF  -> "OF" 
  | CASE  -> "CASE" 
  | BOT  -> "BOT" 
  | JOIN  -> "JOIN" 
  | EXTRACT  -> "EXTRACT" 
  | CONS  -> "CONS" 
  | IGET  -> "IGET" 
  | ISET  -> "ISET" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | FUN  -> "FUN" 
  | COLON  -> "COLON" 
  | EQUAL  -> "EQUAL" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 
  | ID _ -> "ID" 
  | CONST _ -> "CONST" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HOLE  -> (null : System.Object) 
  | LSQUAREBRACKET  -> (null : System.Object) 
  | RSQUAREBRACKET  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | TYPEFUN  -> (null : System.Object) 
  | COLONS  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | LESSTHAN  -> (null : System.Object) 
  | HOM  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | DICT  -> (null : System.Object) 
  | TOSET  -> (null : System.Object) 
  | POSET  -> (null : System.Object) 
  | SEMILATTICE  -> (null : System.Object) 
  | FORALL  -> (null : System.Object) 
  | BIGFORALL  -> (null : System.Object) 
  | IMPLIES  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | INL  -> (null : System.Object) 
  | INR  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | CAP  -> (null : System.Object) 
  | UNCAP  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | TYPES  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | BANG  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | ASTERISK  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | FST  -> (null : System.Object) 
  | SND  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | BOT  -> (null : System.Object) 
  | JOIN  -> (null : System.Object) 
  | EXTRACT  -> (null : System.Object) 
  | CONS  -> (null : System.Object) 
  | IGET  -> (null : System.Object) 
  | ISET  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CONST _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 2us; 65535us; 6us; 16us; 7us; 15us; 1us; 65535us; 6us; 7us; 3us; 65535us; 70us; 71us; 77us; 78us; 84us; 88us; 3us; 65535us; 0us; 1us; 82us; 20us; 126us; 20us; 5us; 65535us; 32us; 33us; 42us; 43us; 56us; 57us; 66us; 67us; 122us; 123us; 2us; 65535us; 72us; 73us; 224us; 225us; 2us; 65535us; 79us; 80us; 227us; 228us; 3us; 65535us; 86us; 87us; 89us; 90us; 109us; 110us; 2us; 65535us; 95us; 96us; 194us; 195us; 1us; 65535us; 188us; 100us; 43us; 65535us; 0us; 24us; 1us; 21us; 4us; 10us; 8us; 9us; 20us; 21us; 27us; 28us; 29us; 30us; 37us; 38us; 39us; 40us; 51us; 52us; 53us; 54us; 61us; 62us; 63us; 64us; 82us; 25us; 86us; 91us; 89us; 91us; 93us; 94us; 95us; 92us; 109us; 91us; 119us; 120us; 126us; 25us; 131us; 132us; 132us; 133us; 134us; 135us; 137us; 138us; 138us; 139us; 139us; 140us; 141us; 142us; 143us; 144us; 146us; 147us; 149us; 150us; 156us; 157us; 160us; 161us; 164us; 165us; 168us; 169us; 171us; 172us; 173us; 174us; 179us; 180us; 181us; 182us; 184us; 185us; 189us; 190us; 192us; 193us; 194us; 92us; 8us; 65535us; 58us; 59us; 68us; 208us; 75us; 208us; 101us; 102us; 170us; 171us; 188us; 104us; 207us; 208us; 214us; 215us; 19us; 65535us; 12us; 13us; 45us; 46us; 68us; 204us; 72us; 74us; 75us; 204us; 79us; 81us; 84us; 85us; 97us; 98us; 115us; 116us; 117us; 118us; 127us; 128us; 151us; 152us; 207us; 204us; 208us; 201us; 219us; 202us; 220us; 202us; 221us; 203us; 224us; 74us; 227us; 81us; 45us; 65535us; 2us; 3us; 12us; 206us; 13us; 205us; 22us; 23us; 45us; 206us; 46us; 205us; 68us; 206us; 72us; 206us; 74us; 205us; 75us; 206us; 79us; 206us; 81us; 205us; 84us; 206us; 85us; 205us; 97us; 206us; 98us; 205us; 115us; 206us; 116us; 205us; 117us; 206us; 118us; 205us; 127us; 206us; 128us; 205us; 130us; 131us; 151us; 206us; 152us; 205us; 162us; 163us; 163us; 164us; 166us; 167us; 167us; 168us; 191us; 192us; 201us; 205us; 202us; 205us; 203us; 205us; 204us; 205us; 207us; 206us; 208us; 206us; 215us; 210us; 216us; 211us; 217us; 212us; 218us; 213us; 219us; 206us; 220us; 206us; 221us; 206us; 224us; 206us; 227us; 206us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 5us; 8us; 10us; 14us; 18us; 24us; 27us; 30us; 34us; 37us; 39us; 83us; 92us; 112us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 3us; 0us; 11us; 12us; 1us; 1us; 5us; 1us; 67us; 68us; 69us; 70us; 1us; 2us; 1us; 2us; 1us; 3us; 2us; 3us; 6us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 5us; 2us; 5us; 64us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 3us; 11us; 12us; 47us; 1us; 11us; 1us; 12us; 5us; 12us; 67us; 68us; 69us; 70us; 1us; 13us; 3us; 13us; 43us; 48us; 2us; 14us; 15us; 2us; 14us; 15us; 2us; 14us; 15us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 2us; 16us; 17us; 2us; 16us; 17us; 2us; 16us; 17us; 2us; 16us; 17us; 2us; 16us; 17us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 17us; 2us; 18us; 19us; 2us; 18us; 19us; 3us; 18us; 19us; 64us; 2us; 18us; 19us; 2us; 18us; 19us; 2us; 18us; 19us; 2us; 18us; 19us; 2us; 18us; 19us; 2us; 18us; 19us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 3us; 22us; 66us; 76us; 2us; 22us; 73us; 1us; 22us; 1us; 22us; 1us; 22us; 1us; 22us; 2us; 23us; 64us; 3us; 24us; 66us; 76us; 2us; 24us; 73us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 24us; 2us; 25us; 64us; 6us; 26us; 27us; 41us; 43us; 47us; 48us; 3us; 26us; 27us; 40us; 2us; 26us; 27us; 2us; 26us; 64us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 2us; 29us; 30us; 2us; 29us; 30us; 1us; 29us; 1us; 29us; 1us; 30us; 2us; 30us; 64us; 1us; 30us; 2us; 31us; 56us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 2us; 37us; 64us; 1us; 37us; 2us; 37us; 64us; 1us; 37us; 1us; 37us; 1us; 37us; 2us; 38us; 54us; 1us; 38us; 1us; 39us; 1us; 40us; 4us; 41us; 43us; 47us; 48us; 1us; 41us; 2us; 41us; 64us; 1us; 41us; 1us; 42us; 5us; 42us; 67us; 68us; 69us; 70us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 2us; 49us; 64us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 5us; 50us; 67us; 68us; 69us; 70us; 5us; 50us; 67us; 68us; 69us; 70us; 1us; 50us; 1us; 51us; 5us; 51us; 67us; 68us; 69us; 70us; 5us; 51us; 67us; 68us; 69us; 70us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 57us; 5us; 57us; 67us; 68us; 69us; 70us; 1us; 57us; 1us; 58us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 2us; 64us; 66us; 2us; 64us; 71us; 2us; 64us; 72us; 2us; 64us; 76us; 5us; 64us; 67us; 68us; 69us; 70us; 5us; 65us; 67us; 68us; 69us; 70us; 2us; 66us; 76us; 1us; 66us; 1us; 66us; 5us; 67us; 67us; 68us; 69us; 70us; 5us; 67us; 68us; 68us; 69us; 70us; 5us; 67us; 68us; 69us; 69us; 70us; 5us; 67us; 68us; 69us; 70us; 70us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 2us; 71us; 71us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 76us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 6us; 8us; 14us; 16us; 18us; 20us; 23us; 25us; 27us; 29us; 31us; 33us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 52us; 54us; 56us; 62us; 64us; 68us; 71us; 74us; 77us; 79us; 81us; 83us; 85us; 87us; 90us; 93us; 96us; 99us; 102us; 104us; 106us; 108us; 110us; 112us; 115us; 118us; 122us; 125us; 128us; 131us; 134us; 137us; 140us; 142us; 144us; 146us; 148us; 150us; 153us; 156us; 159us; 162us; 165us; 167us; 169us; 171us; 173us; 175us; 179us; 182us; 184us; 186us; 188us; 190us; 193us; 197us; 200us; 202us; 204us; 206us; 208us; 211us; 218us; 222us; 225us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 243us; 246us; 249us; 251us; 253us; 255us; 258us; 260us; 263us; 265us; 267us; 269us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 296us; 298us; 301us; 303us; 305us; 307us; 310us; 312us; 314us; 316us; 321us; 323us; 326us; 328us; 330us; 336us; 338us; 340us; 342us; 344us; 346us; 348us; 350us; 352us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 370us; 372us; 374us; 376us; 379us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 405us; 411us; 413us; 415us; 421us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 465us; 467us; 469us; 471us; 473us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 498us; 501us; 504us; 507us; 513us; 519us; 522us; 524us; 526us; 532us; 538us; 544us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 565us; 567us; 569us; 571us; 573us; 575us; 577us; 579us; 581us; 583us; |]
let _fsyacc_action_rows = 231
let _fsyacc_actionTableElements = [|23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 24us; 49152us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 29us; 22us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 4us; 49152us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 24us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 25us; 6us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 49152us; 1us; 32768us; 60us; 11us; 2us; 32768us; 38us; 8us; 60us; 11us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16387us; 0us; 16388us; 1us; 32768us; 57us; 12us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 26us; 14us; 36us; 207us; 60us; 223us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 25us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 29us; 22us; 30us; 187us; 36us; 126us; 37us; 145us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16395us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 4us; 16396us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 0us; 16397us; 2us; 16397us; 8us; 134us; 44us; 146us; 1us; 32768us; 57us; 27us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 2us; 32768us; 4us; 32us; 38us; 29us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 31us; 0us; 16398us; 4us; 32768us; 22us; 58us; 24us; 34us; 49us; 44us; 60us; 26us; 0us; 16399us; 1us; 32768us; 60us; 35us; 1us; 32768us; 24us; 36us; 1us; 32768us; 57us; 37us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 2us; 32768us; 4us; 42us; 38us; 39us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 41us; 0us; 16400us; 4us; 32768us; 22us; 58us; 24us; 34us; 49us; 44us; 60us; 26us; 0us; 16401us; 1us; 32768us; 21us; 45us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 7us; 47us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 1us; 32768us; 60us; 48us; 1us; 32768us; 60us; 49us; 1us; 32768us; 60us; 50us; 1us; 32768us; 57us; 51us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 2us; 32768us; 4us; 56us; 38us; 53us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 55us; 0us; 16402us; 4us; 32768us; 22us; 58us; 24us; 34us; 49us; 44us; 60us; 26us; 0us; 16403us; 4us; 32768us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 1us; 32768us; 60us; 60us; 1us; 32768us; 57us; 61us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 2us; 32768us; 4us; 66us; 38us; 63us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 65us; 0us; 16404us; 4us; 32768us; 22us; 58us; 24us; 34us; 49us; 44us; 60us; 26us; 0us; 16405us; 10us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 36us; 207us; 60us; 69us; 1us; 16457us; 56us; 70us; 3us; 32768us; 12us; 17us; 13us; 18us; 14us; 19us; 1us; 32768us; 37us; 72us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 68us; 60us; 223us; 0us; 16406us; 6us; 16407us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 10us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 36us; 207us; 60us; 76us; 1us; 16457us; 56us; 77us; 3us; 32768us; 12us; 17us; 13us; 18us; 14us; 19us; 1us; 32768us; 37us; 79us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 75us; 60us; 223us; 0us; 16408us; 6us; 16409us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 24us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 47us; 127us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 83us; 61us; 124us; 1us; 16424us; 56us; 84us; 9us; 32768us; 1us; 221us; 5us; 227us; 12us; 17us; 13us; 18us; 14us; 19us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 37us; 86us; 60us; 223us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 82us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16410us; 1us; 32768us; 37us; 89us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 82us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 18us; 93us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 2us; 32768us; 44us; 95us; 56us; 97us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16413us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 28us; 99us; 36us; 207us; 60us; 223us; 0us; 16414us; 2us; 32768us; 37us; 189us; 44us; 101us; 4us; 32768us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 1us; 32768us; 60us; 103us; 0us; 16415us; 1us; 32768us; 60us; 105us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 82us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 111us; 0us; 16420us; 1us; 32768us; 36us; 113us; 1us; 32768us; 60us; 114us; 1us; 32768us; 56us; 115us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 31us; 117us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 37us; 119us; 60us; 223us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 121us; 0us; 16421us; 5us; 32768us; 1us; 176us; 22us; 58us; 24us; 34us; 49us; 44us; 60us; 26us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 24us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 47us; 127us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 37us; 129us; 60us; 223us; 0us; 16425us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 27us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 11us; 216us; 18us; 214us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 32us; 217us; 35us; 218us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16426us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 37us; 136us; 0us; 16427us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16428us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16429us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16430us; 0us; 16431us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 37us; 148us; 0us; 16432us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 21us; 151us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 45us; 153us; 60us; 223us; 1us; 32768us; 19us; 154us; 1us; 32768us; 60us; 155us; 1us; 32768us; 18us; 156us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 20us; 158us; 1us; 32768us; 60us; 159us; 1us; 32768us; 18us; 160us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16433us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 10us; 32768us; 1us; 221us; 5us; 227us; 11us; 216us; 16us; 224us; 18us; 214us; 24us; 219us; 32us; 217us; 35us; 218us; 36us; 207us; 60us; 223us; 27us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 11us; 216us; 18us; 214us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 32us; 217us; 35us; 218us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16434us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 10us; 32768us; 1us; 221us; 5us; 227us; 11us; 216us; 16us; 224us; 18us; 214us; 24us; 219us; 32us; 217us; 35us; 218us; 36us; 207us; 60us; 223us; 27us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 11us; 216us; 18us; 214us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 32us; 217us; 35us; 218us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16435us; 4us; 32768us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16436us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 24us; 175us; 0us; 16437us; 1us; 32768us; 60us; 177us; 1us; 32768us; 2us; 178us; 1us; 32768us; 3us; 179us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 38us; 181us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 40us; 183us; 0us; 16438us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 1us; 32768us; 2us; 186us; 0us; 16439us; 1us; 32768us; 36us; 188us; 4us; 32768us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16440us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 27us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 11us; 216us; 18us; 214us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 32us; 217us; 35us; 218us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16441us; 23us; 32768us; 0us; 196us; 1us; 184us; 6us; 191us; 9us; 112us; 19us; 162us; 20us; 166us; 22us; 170us; 24us; 173us; 27us; 194us; 30us; 187us; 36us; 126us; 39us; 122us; 42us; 141us; 43us; 143us; 46us; 149us; 48us; 130us; 50us; 137us; 53us; 107us; 54us; 108us; 55us; 109us; 59us; 106us; 60us; 125us; 61us; 124us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 37us; 209us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 220us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 2us; 222us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 7us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 37us; 230us; 60us; 223us; 4us; 16448us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 4us; 16449us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 10us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 0us; 16450us; 4us; 16451us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 4us; 16452us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 4us; 16453us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 4us; 16454us; 11us; 216us; 18us; 214us; 32us; 217us; 35us; 218us; 4us; 32768us; 32us; 197us; 33us; 198us; 34us; 200us; 35us; 199us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 16455us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 207us; 60us; 223us; 0us; 16456us; 0us; 16457us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 68us; 60us; 223us; 1us; 32768us; 40us; 226us; 0us; 16458us; 6us; 32768us; 1us; 221us; 5us; 227us; 16us; 224us; 24us; 219us; 36us; 75us; 60us; 223us; 1us; 32768us; 40us; 229us; 0us; 16459us; 0us; 16460us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 24us; 49us; 56us; 61us; 86us; 87us; 89us; 92us; 116us; 117us; 118us; 120us; 127us; 135us; 136us; 137us; 138us; 139us; 140us; 141us; 167us; 168us; 175us; 180us; 181us; 184us; 186us; 210us; 213us; 237us; 239us; 240us; 245us; 246us; 248us; 250us; 252us; 276us; 279us; 303us; 305us; 306us; 311us; 312us; 314us; 321us; 329us; 331us; 333us; 335us; 337us; 361us; 364us; 388us; 390us; 391us; 396us; 397us; 402us; 404us; 406us; 430us; 433us; 457us; 459us; 460us; 465us; 466us; 477us; 479us; 483us; 485us; 492us; 493us; 500us; 511us; 513us; 517us; 519us; 526us; 527us; 534us; 559us; 561us; 571us; 579us; 603us; 604us; 606us; 630us; 631us; 632us; 634us; 658us; 661us; 685us; 686us; 693us; 701us; 702us; 705us; 710us; 712us; 713us; 715us; 716us; 717us; 718us; 719us; 743us; 745us; 746us; 748us; 750us; 752us; 759us; 767us; 774us; 782us; 806us; 808us; 809us; 815us; 816us; 817us; 818us; 843us; 850us; 858us; 859us; 866us; 894us; 918us; 919us; 943us; 945us; 946us; 970us; 994us; 1018us; 1019us; 1043us; 1044us; 1068us; 1069us; 1070us; 1094us; 1096us; 1097us; 1121us; 1123us; 1130us; 1138us; 1140us; 1142us; 1144us; 1168us; 1170us; 1172us; 1174us; 1198us; 1199us; 1206us; 1217us; 1245us; 1246us; 1253us; 1264us; 1292us; 1293us; 1298us; 1322us; 1323us; 1347us; 1349us; 1350us; 1352us; 1354us; 1356us; 1380us; 1382us; 1406us; 1408us; 1409us; 1433us; 1435us; 1436us; 1438us; 1443us; 1467us; 1468us; 1475us; 1503us; 1504us; 1528us; 1529us; 1530us; 1531us; 1532us; 1533us; 1534us; 1542us; 1549us; 1557us; 1565us; 1570us; 1575us; 1586us; 1593us; 1594us; 1599us; 1604us; 1609us; 1614us; 1619us; 1626us; 1633us; 1640us; 1647us; 1654us; 1661us; 1668us; 1669us; 1670us; 1677us; 1679us; 1680us; 1687us; 1689us; 1690us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 4us; 1us; 4us; 2us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 6us; 5us; 8us; 7us; 12us; 11us; 8us; 7us; 6us; 1us; 6us; 1us; 6us; 6us; 1us; 5us; 6us; 4us; 2us; 1us; 1us; 1us; 3us; 10us; 2us; 1us; 1us; 4us; 4us; 5us; 4us; 2us; 2us; 3us; 5us; 13us; 4us; 4us; 3us; 3us; 9us; 3us; 5us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 6us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; |]
let _fsyacc_immediateActions = [|65535us; 65535us; 65535us; 65535us; 65535us; 49152us; 65535us; 65535us; 65535us; 16387us; 16388us; 65535us; 65535us; 65535us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 16399us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16400us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16402us; 65535us; 16403us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16404us; 65535us; 16405us; 65535us; 65535us; 65535us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16408us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16410us; 65535us; 65535us; 16411us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 16415us; 65535us; 16416us; 16417us; 16418us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 16422us; 16423us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 16428us; 65535us; 16429us; 65535us; 16430us; 16431us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 16436us; 65535us; 65535us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 16439us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 16441us; 65535us; 16442us; 16443us; 16444us; 16445us; 16446us; 16447us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16450us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 16460us; |]
let _fsyacc_reductions ()  =    [| 
# 524 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Expr )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startExprList));
# 533 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startTy));
# 542 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Prog )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 551 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeAliasList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 28 "Parser.fsy"
                                                          { typeAliases = List.rev _2 ; exprAliases = Map.empty ;  body = _4 } 
                   )
# 28 "Parser.fsy"
                 :  Ast.Prog ));
# 563 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 29 "Parser.fsy"
                                   { typeAliases = []; exprAliases = Map.empty ;  body = _1 } 
                   )
# 29 "Parser.fsy"
                 :  Ast.Prog ));
# 574 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 31 "Parser.fsy"
                                                             (_1,_3) 
                   )
# 31 "Parser.fsy"
                 : 'TypeAlias));
# 586 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeAliasList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeAlias)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 32 "Parser.fsy"
                                                               _2 :: _1 
                   )
# 32 "Parser.fsy"
                 : 'TypeAliasList));
# 598 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeAlias)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 33 "Parser.fsy"
                                                 [_1] 
                   )
# 33 "Parser.fsy"
                 : 'TypeAliasList));
# 609 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 35 "Parser.fsy"
                                               Toset 
                   )
# 35 "Parser.fsy"
                 : 'ProperKindPrime));
# 619 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 36 "Parser.fsy"
                                         Poset 
                   )
# 36 "Parser.fsy"
                 : 'ProperKindPrime));
# 629 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "Parser.fsy"
                                               Semilattice 
                   )
# 37 "Parser.fsy"
                 : 'ProperKindPrime));
# 639 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Expr )) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "Parser.fsy"
                                                App(_1,_2, parseState.ResultRange) 
                   )
# 39 "Parser.fsy"
                 :  Ast.Expr ));
# 651 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Expr )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "Parser.fsy"
                                             ForallApp(_1, _3, parseState.ResultRange) 
                   )
# 40 "Parser.fsy"
                 :  Ast.Expr ));
# 663 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "Parser.fsy"
                                       _1 
                   )
# 41 "Parser.fsy"
                 :  Ast.Expr ));
# 674 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "Parser.fsy"
                                                           Let(_1,_3,_5, parseState.ResultRange) 
                   )
# 43 "Parser.fsy"
                 : 'LetList));
# 687 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "Parser.fsy"
                                                           Let(_1,_3,_5,parseState.ResultRange) 
                   )
# 44 "Parser.fsy"
                 : 'LetList));
# 700 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Parser.fsy"
                                                               IGet(_2, _5, _7, parseState.ResultRange) 
                   )
# 45 "Parser.fsy"
                 : 'LetList));
# 713 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Parser.fsy"
                                                               IGet(_2, _5, _7, parseState.ResultRange) 
                   )
# 46 "Parser.fsy"
                 : 'LetList));
# 726 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Parser.fsy"
                                                                                  Extract(_3,_5,_6,_7,_9,_11, parseState.ResultRange) 
                   )
# 47 "Parser.fsy"
                 : 'LetList));
# 742 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                                                                  Extract(_3,_5,_6,_7,_9,_11, parseState.ResultRange) 
                   )
# 48 "Parser.fsy"
                 : 'LetList));
# 758 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                                Uncap(_2,_3,_5,_7, parseState.ResultRange) 
                   )
# 49 "Parser.fsy"
                 : 'LetList));
# 772 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Parser.fsy"
                                                                Uncap(_2,_3,_5,_7, parseState.ResultRange) 
                   )
# 50 "Parser.fsy"
                 : 'LetList));
# 786 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProperKindPrime)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ForallParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                                                                            ForallTy(_2,_4,_6, parseState.ResultRange) 
                   )
# 52 "Parser.fsy"
                 : 'ForallParList));
# 799 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                              _1 
                   )
# 53 "Parser.fsy"
                 : 'ForallParList));
# 810 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProperKindPrime)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                                                        TyOp(_2,_4,_6, parseState.ResultRange) 
                   )
# 55 "Parser.fsy"
                 : 'TypeParList));
# 823 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                            _1 
                   )
# 56 "Parser.fsy"
                 : 'TypeParList));
# 834 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                                                       Abs(_2,_4,_6,parseState.ResultRange) 
                   )
# 58 "Parser.fsy"
                 : 'ParList));
# 847 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProperKindPrime)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                                                Forall(_2,_4,_6, parseState.ResultRange) 
                   )
# 59 "Parser.fsy"
                 : 'ParList));
# 860 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                _1 
                   )
# 60 "Parser.fsy"
                 : 'ParList));
# 871 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'EntryList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                                                   Cons(_1,_3,_5,parseState.ResultRange) 
                   )
# 62 "Parser.fsy"
                 : 'EntryList));
# 884 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                                                       Cons(_1,_3,Bot(_5, noRange), parseState.ResultRange) 
                   )
# 63 "Parser.fsy"
                 : 'EntryList));
# 897 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CoeffectAscriptionList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                                                       (_3,_4) :: _1 
                   )
# 65 "Parser.fsy"
                 : 'CoeffectAscriptionList));
# 910 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                           [(_1,_2)] 
                   )
# 66 "Parser.fsy"
                 : 'CoeffectAscriptionList));
# 922 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                        Int(_1, parseState.ResultRange) 
                   )
# 69 "Parser.fsy"
                 : 'Expr));
# 933 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                    Bool(true, parseState.ResultRange) 
                   )
# 70 "Parser.fsy"
                 : 'Expr));
# 943 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                    Bool(false, parseState.ResultRange) 
                   )
# 71 "Parser.fsy"
                 : 'Expr));
# 953 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                          _2 
                   )
# 72 "Parser.fsy"
                 : 'Expr));
# 964 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                                                                Hom(_3, _5, _7, _9, parseState.ResultRange) 
                   )
# 73 "Parser.fsy"
                 : 'Expr));
# 978 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                      _2 
                   )
# 74 "Parser.fsy"
                 : 'Expr));
# 989 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                Const(_1, parseState.ResultRange) 
                   )
# 75 "Parser.fsy"
                 : 'Expr));
# 1000 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                             Var(_1, parseState.ResultRange) 
                   )
# 76 "Parser.fsy"
                 : 'Expr));
# 1011 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                   Bot(_3, parseState.ResultRange) 
                   )
# 77 "Parser.fsy"
                 : 'Expr));
# 1022 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                            Join(_2, _3, _4, parseState.ResultRange) 
                   )
# 78 "Parser.fsy"
                 : 'Expr));
# 1035 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                           LessThan(_2,_4,parseState.ResultRange) 
                   )
# 79 "Parser.fsy"
                 : 'Expr));
# 1047 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                              Cons(_2, _3, _4, parseState.ResultRange) 
                   )
# 80 "Parser.fsy"
                 : 'Expr));
# 1060 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                   Fst(_2, parseState.ResultRange) 
                   )
# 81 "Parser.fsy"
                 : 'Expr));
# 1071 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                   Snd(_2, parseState.ResultRange) 
                   )
# 82 "Parser.fsy"
                 : 'Expr));
# 1082 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Expr )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                 _2 
                   )
# 83 "Parser.fsy"
                 : 'Expr));
# 1093 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                        Pair(_2, _4, parseState.ResultRange) 
                   )
# 84 "Parser.fsy"
                 : 'Expr));
# 1105 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                          Case(_2, _4, _7, _9, _11, _13, parseState.ResultRange) 
                   )
# 86 "Parser.fsy"
                 : 'Expr));
# 1121 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                         Inl(_2,_3,_4, parseState.ResultRange) 
                   )
# 87 "Parser.fsy"
                 : 'Expr));
# 1134 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                         Inr(_2,_3,_4, parseState.ResultRange) 
                   )
# 88 "Parser.fsy"
                 : 'Expr));
# 1147 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                          Cap(_2, _3, parseState.ResultRange) 
                   )
# 89 "Parser.fsy"
                 : 'Expr));
# 1159 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                         ISet(_2, parseState.ResultRange) 
                   )
# 90 "Parser.fsy"
                 : 'Expr));
# 1170 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                                                       MLet(_3,_6,_8, parseState.ResultRange) 
                   )
# 91 "Parser.fsy"
                 : 'Expr));
# 1183 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                             MRet(_2, parseState.ResultRange) 
                   )
# 92 "Parser.fsy"
                 : 'Expr));
# 1194 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'CoeffectAscriptionList)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                                       CoeffectAscription(_3, _5, parseState.ResultRange) 
                   )
# 93 "Parser.fsy"
                 : 'Expr));
# 1206 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                         TypeAscription(_2,_3, parseState.ResultRange) 
                   )
# 94 "Parser.fsy"
                 : 'Expr));
# 1218 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'EntryList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                           _2 
                   )
# 95 "Parser.fsy"
                 : 'Expr));
# 1229 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                  Hole(parseState.ResultRange) 
                   )
# 96 "Parser.fsy"
                 : 'Expr));
# 1239 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                            CoeffectMonotone 
                   )
# 98 "Parser.fsy"
                 : 'Scalar));
# 1249 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                            CoeffectAntitone 
                   )
# 99 "Parser.fsy"
                 : 'Scalar));
# 1259 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                         CoeffectRobust 
                   )
# 100 "Parser.fsy"
                 : 'Scalar));
# 1269 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                         CoeffectAny 
                   )
# 101 "Parser.fsy"
                 : 'Scalar));
# 1279 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                          TyApp(_1,_2, parseState.ResultRange) 
                   )
# 103 "Parser.fsy"
                 : 'TyList));
# 1291 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                   _1 
                   )
# 104 "Parser.fsy"
                 : 'TyList));
# 1302 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                       Capsule(_3, _2, parseState.ResultRange) 
                   )
# 106 "Parser.fsy"
                 :  Ast.Ty ));
# 1314 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Scalar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                              FunTy(_1,_3,_4, parseState.ResultRange) 
                   )
# 107 "Parser.fsy"
                 :  Ast.Ty ));
# 1327 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                      Dictionary(_1,_3, parseState.ResultRange) 
                   )
# 108 "Parser.fsy"
                 :  Ast.Ty ));
# 1339 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                      Sum(_1,_3, parseState.ResultRange) 
                   )
# 109 "Parser.fsy"
                 :  Ast.Ty ));
# 1351 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Ty )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                          Prod(_1,_3, parseState.ResultRange) 
                   )
# 110 "Parser.fsy"
                 :  Ast.Ty ));
# 1363 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                            IVar(_2, parseState.ResultRange) 
                   )
# 111 "Parser.fsy"
                 :  Ast.Ty ));
# 1374 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                                Partial(_2, parseState.ResultRange) 
                   )
# 112 "Parser.fsy"
                 :  Ast.Ty ));
# 1385 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                              TyId(_1, parseState.ResultRange) 
                   )
# 113 "Parser.fsy"
                 :  Ast.Ty ));
# 1396 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ForallParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                       _2 
                   )
# 114 "Parser.fsy"
                 :  Ast.Ty ));
# 1407 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeParList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                                   _2 
                   )
# 115 "Parser.fsy"
                 :  Ast.Ty ));
# 1418 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TyList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                _2 
                   )
# 116 "Parser.fsy"
                 :  Ast.Ty ));
|]
# 1430 "Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 65;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let ExprList lexer lexbuf :  Ast.Expr  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let Ty lexer lexbuf :  Ast.Ty  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let start lexer lexbuf :  Ast.Prog  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
